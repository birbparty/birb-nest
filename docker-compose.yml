version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: birb-nest-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-birb}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-birbpass}
      POSTGRES_DB: ${POSTGRES_DB:-birbcache}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-birb} -d ${POSTGRES_DB:-birbcache}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - birb-net

  redis:
    image: redis:7-alpine
    container_name: birb-nest-redis
    command: redis-server --appendonly yes --appendfilename "birb-cache.aof"
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - birb-net

  nats:
    image: nats:2.10-alpine
    container_name: birb-nest-nats
    command: |
      -js
      -sd /data
      -p 4222
      -m 8222
      --name birb-nats
      --user ${NATS_USER:-birb}
      --pass ${NATS_PASSWORD:-birbpass}
    ports:
      - "${NATS_PORT:-4222}:4222"  # Client connections
      - "${NATS_MONITOR_PORT:-8222}:8222"  # HTTP monitoring
    volumes:
      - nats_data:/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - birb-net

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
      target: production
    container_name: birb-nest-api
    environment:
      # Database
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER:-birb}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-birbpass}
      POSTGRES_DB: ${POSTGRES_DB:-birbcache}
      POSTGRES_MAX_CONNS: ${POSTGRES_MAX_CONNS:-25}
      POSTGRES_MIN_CONNS: ${POSTGRES_MIN_CONNS:-5}
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # NATS
      NATS_URL: nats://${NATS_USER:-birb}:${NATS_PASSWORD:-birbpass}@nats:4222
      # API Config
      API_PORT: ${API_PORT:-8080}
      API_HOST: 0.0.0.0
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "${API_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - birb-net

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
      target: production
    environment:
      # Database
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER:-birb}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-birbpass}
      POSTGRES_DB: ${POSTGRES_DB:-birbcache}
      POSTGRES_MAX_CONNS: ${POSTGRES_MAX_CONNS:-25}
      POSTGRES_MIN_CONNS: ${POSTGRES_MIN_CONNS:-5}
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # NATS
      NATS_URL: nats://${NATS_USER:-birb}:${NATS_PASSWORD:-birbpass}@nats:4222
      # Worker Config
      WORKER_BATCH_SIZE: ${WORKER_BATCH_SIZE:-100}
      WORKER_BATCH_TIMEOUT: ${WORKER_BATCH_TIMEOUT:-1s}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - birb-net
    deploy:
      replicas: ${WORKER_REPLICAS:-2}

networks:
  birb-net:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  nats_data:
